FROM quay.io/pypa/manylinux2010_x86_64
USER root

ARG PROJ
ENV PROJ=${PROJ}
ENV PYTHONVERSIONS="cp37-cp37m cp38-cp38"
ENV BUILDDIR=/build

COPY . /src/

RUN ( \
        pyvers=( $PYTHONVERSIONS ); \
        for pyver in "${pyvers[@]}"; do \
            pybin=/opt/python/${pyver}/bin; \
            ${pybin}/pip install build; \
            ${pybin}/pip install -r /src/requirements-test.txt; \
            ${pybin}/pip install -e /src/; \
            ${pybin}/pip uninstall -y ${PROJ}; \
            echo; \
            echo ---- building in $pyver ----; \
            echo; \
            (cd /src/ && "${pybin}/python" -m build --sdist --wheel -o ${BUILDDIR}) || exit 1; \
        done \
    )


ARG PLAT=manylinux2010_x86_64

RUN ( \
        for wheel in ${BUILDDIR}/*.whl; do \
            if ! auditwheel show "$wheel"; then \
                echo "Skipping non-platform wheel $wheel"; \
            else \
                auditwheel repair "$wheel" --plat "$PLAT" -w ${BUILDDIR}; \
            fi \
        done \
    )


RUN ( \
        pythonversions=( $PYTHONVERSIONS ); \
        for pyver in "${pythonversions[@]}"; do \
            echo; \
            echo ---- testing in $pyver ----; \
            echo; \
            pybin=/opt/python/${pyver}/bin; \
            "${pybin}/pip" install ${PROJ} --no-index -f ${BUILDDIR}; \
            (cd "$HOME"; "${pybin}/python" -m pytest /src/tests) || exit 1; \
        done \
    )
